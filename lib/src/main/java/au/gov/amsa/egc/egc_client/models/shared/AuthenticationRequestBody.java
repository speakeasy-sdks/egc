/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package au.gov.amsa.egc.egc_client.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AuthenticationRequestBody - Holds the credentials and validity preference used to 
 * create a token to be passed as a request header in calls
 * to the API
 * 
 */

public class AuthenticationRequestBody {
    @JsonProperty("password")
    public String password;

    public AuthenticationRequestBody withPassword(String password) {
        this.password = password;
        return this;
    }
    
    @JsonProperty("username")
    public String username;

    public AuthenticationRequestBody withUsername(String username) {
        this.username = username;
        return this;
    }
    
    /**
     * The duration in minutes that the token will be valid, 
     * capped by the maximum allowed server-decided duration.  
     * If not supplied (this parameter is optional) then the
     * server default will be applied. Either way the response
     * from this method supplies the expiry time for the
     * token. The token should be refreshed before the expiry 
     * time to avoid auth related failures. Note that this field
     * is only a suggestion to the service and may be ignored.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validityMinutes")
    public Integer validityMinutes;

    public AuthenticationRequestBody withValidityMinutes(Integer validityMinutes) {
        this.validityMinutes = validityMinutes;
        return this;
    }
    
    public AuthenticationRequestBody(@JsonProperty("username") String username, @JsonProperty("password") String password) {
        this.username = username;
        this.password = password;
  }
}
